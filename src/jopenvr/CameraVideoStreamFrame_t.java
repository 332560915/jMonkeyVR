package jopenvr;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CameraVideoStreamFrame_t extends Structure {
	public int m_nStreamFormat;
	public int m_nWidth;
	public int m_nHeight;
	public int m_nFrameSequence;
	public int m_nTimeStamp;
	public int m_nBufferIndex;
	public int m_nBufferCount;
	public int m_nImageDataSize;
	public double m_flFrameTime;
	public byte m_bPoseValid;
	/**
	 * float[16]<br>
	 * C type : float[16]
	 */
	public float[] m_HMDPoseMatrix = new float[16];
	/**
	 * void *<br>
	 * C type : void*
	 */
	public Pointer m_pImageData;
	public CameraVideoStreamFrame_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("m_nStreamFormat", "m_nWidth", "m_nHeight", "m_nFrameSequence", "m_nTimeStamp", "m_nBufferIndex", "m_nBufferCount", "m_nImageDataSize", "m_flFrameTime", "m_bPoseValid", "m_HMDPoseMatrix", "m_pImageData");
	}
	public CameraVideoStreamFrame_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CameraVideoStreamFrame_t implements Structure.ByReference {
		
	};
	public static class ByValue extends CameraVideoStreamFrame_t implements Structure.ByValue {
		
	};
}
