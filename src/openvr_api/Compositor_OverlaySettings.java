package openvr_api;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Namespace;
/**
 * Allows the application to customize how the overlay appears in the compositor<br>
 * <i>native declaration : /usr/include/stdint.h:669</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Name("Compositor_OverlaySettings") 
@Namespace("vr") 
@Library("openvr_api") 
public class Compositor_OverlaySettings extends StructObject {
	static {
		BridJ.register();
	}
	/** sizeof(Compositor_OverlaySettings) */
	@Field(0) 
	public int size() {
		return this.io.getIntField(this, 0);
	}
	/** sizeof(Compositor_OverlaySettings) */
	@Field(0) 
	public Compositor_OverlaySettings size(int size) {
		this.io.setIntField(this, 0, size);
		return this;
	}
	@Field(1) 
	public boolean curved() {
		return this.io.getBooleanField(this, 1);
	}
	@Field(1) 
	public Compositor_OverlaySettings curved(boolean curved) {
		this.io.setBooleanField(this, 1, curved);
		return this;
	}
	@Field(2) 
	public boolean antialias() {
		return this.io.getBooleanField(this, 2);
	}
	@Field(2) 
	public Compositor_OverlaySettings antialias(boolean antialias) {
		this.io.setBooleanField(this, 2, antialias);
		return this;
	}
	@Field(3) 
	public float scale() {
		return this.io.getFloatField(this, 3);
	}
	@Field(3) 
	public Compositor_OverlaySettings scale(float scale) {
		this.io.setFloatField(this, 3, scale);
		return this;
	}
	@Field(4) 
	public float distance() {
		return this.io.getFloatField(this, 4);
	}
	@Field(4) 
	public Compositor_OverlaySettings distance(float distance) {
		this.io.setFloatField(this, 4, distance);
		return this;
	}
	@Field(5) 
	public float alpha() {
		return this.io.getFloatField(this, 5);
	}
	@Field(5) 
	public Compositor_OverlaySettings alpha(float alpha) {
		this.io.setFloatField(this, 5, alpha);
		return this;
	}
	@Field(6) 
	public float uOffset() {
		return this.io.getFloatField(this, 6);
	}
	@Field(6) 
	public Compositor_OverlaySettings uOffset(float uOffset) {
		this.io.setFloatField(this, 6, uOffset);
		return this;
	}
	@Field(7) 
	public float vOffset() {
		return this.io.getFloatField(this, 7);
	}
	@Field(7) 
	public Compositor_OverlaySettings vOffset(float vOffset) {
		this.io.setFloatField(this, 7, vOffset);
		return this;
	}
	@Field(8) 
	public float uScale() {
		return this.io.getFloatField(this, 8);
	}
	@Field(8) 
	public Compositor_OverlaySettings uScale(float uScale) {
		this.io.setFloatField(this, 8, uScale);
		return this;
	}
	@Field(9) 
	public float vScale() {
		return this.io.getFloatField(this, 9);
	}
	@Field(9) 
	public Compositor_OverlaySettings vScale(float vScale) {
		this.io.setFloatField(this, 9, vScale);
		return this;
	}
	@Field(10) 
	public float gridDivs() {
		return this.io.getFloatField(this, 10);
	}
	@Field(10) 
	public Compositor_OverlaySettings gridDivs(float gridDivs) {
		this.io.setFloatField(this, 10, gridDivs);
		return this;
	}
	@Field(11) 
	public float gridWidth() {
		return this.io.getFloatField(this, 11);
	}
	@Field(11) 
	public Compositor_OverlaySettings gridWidth(float gridWidth) {
		this.io.setFloatField(this, 11, gridWidth);
		return this;
	}
	@Field(12) 
	public float gridScale() {
		return this.io.getFloatField(this, 12);
	}
	@Field(12) 
	public Compositor_OverlaySettings gridScale(float gridScale) {
		this.io.setFloatField(this, 12, gridScale);
		return this;
	}
	/** C type : HmdMatrix44_t */
	@Field(13) 
	public HmdMatrix44_t transform() {
		return this.io.getNativeObjectField(this, 13);
	}
	/** C type : HmdMatrix44_t */
	@Field(13) 
	public Compositor_OverlaySettings transform(HmdMatrix44_t transform) {
		this.io.setNativeObjectField(this, 13, transform);
		return this;
	}
	public Compositor_OverlaySettings() {
		super();
	}
	public Compositor_OverlaySettings(Pointer pointer) {
		super(pointer);
	}
}
