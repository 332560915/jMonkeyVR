package openvr_api;
import openvr_api.IOpenvr_api.HmdTrackingResult;
import org.bridj.BridJ;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Namespace;
/**
 * describes a single pose for a tracked object<br>
 * <i>native declaration : /usr/include/stdint.h:387</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Name("TrackedDevicePose_t") 
@Namespace("vr") 
@Library("openvr_api") 
public class TrackedDevicePose_t extends StructObject {
	static {
		BridJ.register();
	}
	/** C type : HmdMatrix34_t */
	@Field(0) 
	public HmdMatrix34_t mDeviceToAbsoluteTracking() {
		return this.io.getNativeObjectField(this, 0);
	}
	/** C type : HmdMatrix34_t */
	@Field(0) 
	public TrackedDevicePose_t mDeviceToAbsoluteTracking(HmdMatrix34_t mDeviceToAbsoluteTracking) {
		this.io.setNativeObjectField(this, 0, mDeviceToAbsoluteTracking);
		return this;
	}
	/**
	 * velocity in tracker space in m/s<br>
	 * C type : HmdVector3_t
	 */
	@Field(1) 
	public HmdVector3_t vVelocity() {
		return this.io.getNativeObjectField(this, 1);
	}
	/**
	 * velocity in tracker space in m/s<br>
	 * C type : HmdVector3_t
	 */
	@Field(1) 
	public TrackedDevicePose_t vVelocity(HmdVector3_t vVelocity) {
		this.io.setNativeObjectField(this, 1, vVelocity);
		return this;
	}
	/**
	 * angular velocity in radians/s (?)<br>
	 * C type : HmdVector3_t
	 */
	@Field(2) 
	public HmdVector3_t vAngularVelocity() {
		return this.io.getNativeObjectField(this, 2);
	}
	/**
	 * angular velocity in radians/s (?)<br>
	 * C type : HmdVector3_t
	 */
	@Field(2) 
	public TrackedDevicePose_t vAngularVelocity(HmdVector3_t vAngularVelocity) {
		this.io.setNativeObjectField(this, 2, vAngularVelocity);
		return this;
	}
	/** C type : HmdTrackingResult */
	@Field(3) 
	public IntValuedEnum<HmdTrackingResult > eTrackingResult() {
		return this.io.getEnumField(this, 3);
	}
	/** C type : HmdTrackingResult */
	@Field(3) 
	public TrackedDevicePose_t eTrackingResult(IntValuedEnum<HmdTrackingResult > eTrackingResult) {
		this.io.setEnumField(this, 3, eTrackingResult);
		return this;
	}
	@Field(4) 
	public boolean bPoseIsValid() {
		return this.io.getBooleanField(this, 4);
	}
	@Field(4) 
	public TrackedDevicePose_t bPoseIsValid(boolean bPoseIsValid) {
		this.io.setBooleanField(this, 4, bPoseIsValid);
		return this;
	}
	@Field(5) 
	public boolean bDeviceIsConnected() {
		return this.io.getBooleanField(this, 5);
	}
	@Field(5) 
	public TrackedDevicePose_t bDeviceIsConnected(boolean bDeviceIsConnected) {
		this.io.setBooleanField(this, 5, bDeviceIsConnected);
		return this;
	}
	public TrackedDevicePose_t() {
		super();
	}
	public TrackedDevicePose_t(Pointer pointer) {
		super(pointer);
	}
}
