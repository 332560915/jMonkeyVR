package openvr_api;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Namespace;
/**
 * Allows the application to control what part of the provided texture will be used in the<br>
 * frame buffer.<br>
 * <i>native declaration : /usr/include/stdint.h:1105</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Name("Compositor_TextureBounds") 
@Namespace("vr") 
@Library("openvr_api") 
public class Compositor_TextureBounds extends StructObject {
	static {
		BridJ.register();
	}
	@Field(0) 
	public float uMin() {
		return this.io.getFloatField(this, 0);
	}
	@Field(0) 
	public Compositor_TextureBounds uMin(float uMin) {
		this.io.setFloatField(this, 0, uMin);
		return this;
	}
	@Field(1) 
	public float vMin() {
		return this.io.getFloatField(this, 1);
	}
	@Field(1) 
	public Compositor_TextureBounds vMin(float vMin) {
		this.io.setFloatField(this, 1, vMin);
		return this;
	}
	@Field(2) 
	public float uMax() {
		return this.io.getFloatField(this, 2);
	}
	@Field(2) 
	public Compositor_TextureBounds uMax(float uMax) {
		this.io.setFloatField(this, 2, uMax);
		return this;
	}
	@Field(3) 
	public float vMax() {
		return this.io.getFloatField(this, 3);
	}
	@Field(3) 
	public Compositor_TextureBounds vMax(float vMax) {
		this.io.setFloatField(this, 3, vMax);
		return this;
	}
	public Compositor_TextureBounds() {
		super();
	}
	public Compositor_TextureBounds(Pointer pointer) {
		super(pointer);
	}
}
